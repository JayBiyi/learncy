{"version":3,"sources":["components/ToolsPane.js","components/ColorPicker.js","components/Effects/useCanvas.js","components/Screen.js","App.js","index.js"],"names":["DownloadContainer","styled","div","Download","icon","faFileDownload","className","id","ToolsContainer","MoreObjects","props","console","log","ToolsItem","faTable","ToolsPane","useEffect","document","body","style","cursor","faPen","faSquare","onClick","alert","faEraser","faUndo","faPalette","faThumbtack","faImage","brushSize","getDrawCursor","box","window","btoa","useCanvas","ctx","useState","color","setColor","canvasProps","backgroundColor","defaultCursor","isDrawingMode","selection","el","getElementById","canvas","fabric","Canvas","setDimensions","width","innerWidth","height","innerHeight","freeDrawingBrush","on","data","Screen","colors","fun","Button","r","Math","round","random","length","pickRandomColor","button","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.ba6bcca4.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSquare } from \"@fortawesome/free-regular-svg-icons\";\r\nimport {\r\n  faFileDownload,\r\n  faEyeDropper,\r\n  faPen,\r\n  faEraser,\r\n  faUndo,\r\n  faImage,\r\n  faThumbtack,\r\n  faTable,\r\n  faPalette,\r\n  faSortDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst DownloadContainer = styled.div`\r\n  display: flex;\r\nbox-sizing: border-box;\r\n  flex-direction: column;\r\n  justify-content:center;\r\n  align-items: center;\r\n  width:100%:\r\n  height: 100%;\r\n`;\r\n\r\nconst Download = () => {\r\n  return (\r\n    <DownloadContainer>\r\n      <FontAwesomeIcon icon={faFileDownload} className=\"tool tool-glide\" />\r\n      <div className=\"container\">\r\n        <div className=\"bar-container\">\r\n          <div className=\"bar\" id=\"bar\"></div>\r\n        </div>\r\n      </div>\r\n    </DownloadContainer>\r\n  );\r\n};\r\n\r\nconst ToolsContainer = styled.div`\r\n  box-sizing: border-box;\r\n  background-color: rgb(20, 20, 20);\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-style: space-between;\r\n  z-index: 3;\r\n`;\r\n\r\nconst MoreObjects = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <ul className=\"more\">\r\n      <li>\r\n        <ToolsItem>\r\n          <FontAwesomeIcon icon={faTable} className=\"\" />\r\n        </ToolsItem>\r\n      </li>\r\n      <li>\r\n        <ToolsItem>\r\n          <FontAwesomeIcon icon={faTable} className=\"\" />\r\n        </ToolsItem>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n//can draw objects eg table, boxes,triangles,circles\r\n//can import an image\r\n//can download session as image\r\n//can select using rect select tool\r\n//after selection user can delete selected objects, or hide them\r\n\r\nconst ToolsItem = styled.div`\r\n  color: white;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  width: 100px;\r\n  height: 100px;\r\n`;\r\nconst ToolsPane = () => {\r\n  useEffect(() => {\r\n    console.log(\"cusro is \" + document.body.style);\r\n    document.body.style.cursor = 'url(\"./box.svg\")';\r\n    console.log(document.body.style.cursor);\r\n  });\r\n  return (\r\n    <ToolsContainer className=\"panel\">\r\n      <ToolsItem>\r\n        <FontAwesomeIcon icon={faPen} className=\"tool tool-glide\" />\r\n      </ToolsItem>\r\n      <ToolsItem>\r\n        <FontAwesomeIcon icon={faSquare} className=\"tool tool-glide\" />\r\n        <div className={\"drop-down-wrapper\"}>\r\n          <div className={\"drop-down-icon\"} onClick={() => alert(\"Please\")}>\r\n            <span className={\"drop-down-marker\"}></span>\r\n          </div>\r\n          <MoreObjects></MoreObjects>\r\n        </div>\r\n      </ToolsItem>\r\n      <ToolsItem>\r\n        <FontAwesomeIcon\r\n          icon={faEraser}\r\n          className=\"tool tool-glide tool-selected\"\r\n        />\r\n      </ToolsItem>\r\n      <ToolsItem>\r\n        <FontAwesomeIcon icon={faUndo} className=\"tool tool-glide\" />\r\n      </ToolsItem>\r\n      <ToolsItem>\r\n        <FontAwesomeIcon icon={faTable} className=\"tool tool-glide\" />\r\n      </ToolsItem>\r\n      <ToolsItem>\r\n        <FontAwesomeIcon icon={faPalette} className=\"tool tool-glide\" />\r\n      </ToolsItem>\r\n      <ToolsItem>\r\n        <FontAwesomeIcon icon={faThumbtack} className=\"tool tool-glide\" />\r\n      </ToolsItem>\r\n      <ToolsItem>\r\n        <FontAwesomeIcon icon={faImage} className=\"tool tool-glide\" />\r\n      </ToolsItem>\r\n      <ToolsItem>\r\n        <Download />\r\n      </ToolsItem>\r\n    </ToolsContainer>\r\n  );\r\n};\r\nexport default ToolsPane;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\n// Canvas from \"./canvas\"\r\n\r\nconst Pallet = styled.div`\r\n  width: 250px;\r\n  height: 300px;\r\n  border-radius: 5px;\r\n  background-color: green;\r\n`;\r\n\r\nconst ColorPicker = function () {\r\n  return (\r\n    <>\r\n      <Pallet></Pallet>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n","import { fabric } from \"fabric\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst brushColor = \"hotpink\";\r\nconst brushSize = 30;\r\nconst handleDraw = (ctx, data) => {\r\n \r\n  if (!data.target) {\r\n  var drawn = drawCircle(data.pointer.x, data.pointer.y);\r\n    //var drawn = drawBox(data.pointer.x, data.pointer.y);\r\n    ctx.add(drawn);\r\n\r\n   ctx.on(\"mouse:move\", (e) => {\r\n    // drawn.setOptions({width: e.pointer.x-drawn.left,height: e.pointer.y-drawn.top});\r\n     drawn.setOptions({radius: (e.pointer.y-drawn.top)>0?(e.pointer.y-drawn.top):(drawn.top-e.pointer.y)});\r\n     ctx.renderAll()\r\n     //\r\n     ctx.on('mouse:up',()=>{ctx.__eventListeners['mouse:move'] = []})\r\n    \r\n  });\r\n\r\n  }\r\n  \r\n  console.log(!data.target);\r\n};\r\nconst drawCircle = (x,y)=>{\r\n  var circle = new fabric.Circle({\r\n    top: y,\r\n    left: x,\r\n    radius: 20,\r\n    fill: 'blue'\r\n\r\n  })\r\n  return circle;\r\n}\r\nconst drawBox = (x, y) => {\r\n  var box = new fabric.Rect({\r\n    top: y,\r\n    left: x,\r\n    rx: 2,\r\n    ry: 2,\r\n    width: 40,\r\n    height: 40,\r\n    //   stroke: \"green\",\r\n    //   visible: true,\r\n    //   //cornerSize: 5,\r\n    //   cornerStrokeColor: \"purple\",\r\n    //   transparentCorners: true,\r\n    //   hasBorders: true,\r\n    //   cornerDashArray: [2, 2],\r\n    //   cornerColor: \"purple\",\r\n    //   cornerStyle: \"circle\",\r\n    //   borderOpacityWhenMoving: 1,\r\n    fill: \"red\",\r\n    //   selectible: true,\r\n    //   selectionBackgroundColor: \"rgba(255,255,255,0.4)\",\r\n    //   angle: 30,\r\n  });\r\n  return box;\r\n};\r\n\r\nconst getDrawCursor = () => {\r\n  const eraser = `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n  viewBox=\"0 0 299.289 299.289\">\r\n<g>\r\n <g>\r\n   <path d=\"M290.422,79.244L220.034,8.857c-11.794-11.795-30.986-11.795-42.78,0C175.866,10.245,12.971,173.14,8.867,177.244\r\n     c-11.822,11.821-11.824,30.957,0,42.78l70.388,70.388c11.821,11.822,30.957,11.824,42.78,0\r\n     c1.046-1.046,165.357-165.357,168.388-168.388C302.244,110.203,302.246,91.066,290.422,79.244z M110.367,278.744\r\n     c-5.374,5.373-14.071,5.373-19.446,0l-70.388-70.388c-5.373-5.374-5.375-14.071,0-19.446l34.61-34.61l89.834,89.834\r\n     L110.367,278.744z M278.755,110.357l-122.111,122.11l-89.833-89.833l122.11-122.111c5.374-5.374,14.071-5.374,19.446,0\r\n     l70.388,70.388C284.129,96.285,284.129,104.983,278.755,110.357z\"/>\r\n </g>\r\n</g>\r\n</svg>\r\n`;\r\n  const circle = `\r\n\t\t<svg\r\n\t\t\theight=\"${brushSize}\"\r\n\t\t\tfill=\"${brushColor}\"\r\n\t\t\tviewBox=\"0 0 ${brushSize * 2} ${brushSize * 2}\"\r\n\t\t\twidth=\"${brushSize}\"\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t>\r\n\t\t\t<circle\r\n\t\t\t\tcx=\"50%\"\r\n\t\t\t\tcy=\"50%\"\r\n\t\t\t\tr=\"${brushSize}\" \r\n\t\t\t/>\r\n\t\t</svg>\r\n  `;\r\n  const box = `<svg width=\"${brushSize}\" height=\"${brushSize}\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\r\n  <g>\r\n   <title>Layer 1</title>\r\n   <path id=\"imagebot_2\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\" stroke-linecap=\"square\" stroke=\"#000000\" d=\"M 5 5 L 5 ${brushSize} L ${brushSize} ${brushSize} L ${brushSize} 5 L 5 5 z\"/>\r\n  </g>\r\n </svg>`;\r\n\r\n  return `data:image/svg+xml;base64,${window.btoa(box)}`;\r\n};\r\n\r\nconst useCanvas = (ctx) => {\r\n  console.log(\"state chnage\");\r\n  let [color, setColor] = useState(null);\r\n  const canvasProps = {\r\n    backgroundColor: \"white\",\r\n    // selectionColor: \"blue\",\r\n    // constrolsAboveOverlay: false,\r\n    defaultCursor: `url(${getDrawCursor()}) ${brushSize / 2} ${\r\n      brushSize / 2\r\n    }, crosshair`,\r\n    // fireRightClick: true,\r\n    // freeDrawingCursor: \"pointer\",\r\n    // moveCursor: \"pointer\",\r\n    // hoverCursor: \"pointer\",\r\n    isDrawingMode: true,\r\n    // rotationCursor: \"pointer\",\r\n    // selectionLineWidth: 2,\r\n    selection: false,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const el = document.getElementById(ctx);\r\n    const canvas = new fabric.Canvas(el, canvasProps);\r\n    canvas.setDimensions({\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    });\r\n    canvas.freeDrawingBrush.color\r\n    = 'blue'\r\n    canvas.on(\"mouse:down\", (data) => {\r\n      //handleDraw(canvas, data);\r\n    });\r\n\r\n    //box.bringToFront();\r\n    //canvas.add(box);\r\n    //canvas.renderAll();\r\n  }, [color]);\r\n  return setColor;\r\n};\r\nexport default useCanvas;\r\n","//screen has ui components such as tools pane, and controls such as rotation and color pickers\r\n//screen also has the canvas where we draw\r\nimport ToolsPane from './ToolsPane.js'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Canvas from \"./Canvas.js\";\r\nimport ColorPicker from \"./ColorPicker.js\";\r\nimport styled, { css } from \"styled-components\";\r\nimport useCanvas from './Effects/useCanvas.js'\r\n\r\n\r\n//clearContext(ctx)\r\n//clear()\r\n//getActiveObject\r\n//getElement()\r\n//getHeight\r\n//getPointer(e,ignoreZoom)\r\n//getSelectionContext\r\n//removeListeners()\r\n//setBackgroundColor(color)\r\n//setCursor()\r\n\r\nconst Screen = function () {\r\n  const colors = [\"red\",\"blue\",\"orange\",\"yellow\",\"green\",\"violet\"];\r\n  function pickRandomColor(){\r\n    var r = Math.round(Math.random() * colors.length-1)\r\n    return colors[r];\r\n\r\n  }\r\n  \r\n\r\nconst fun = useCanvas(\"canvas\")\r\n  return (\r\n    <>\r\n    <ToolsPane />\r\n    <Button onClick={()=>fun(pickRandomColor())}>ChangeColor</Button>\r\n    <canvas id=\"canvas\" className=\"canvas\">\r\n      <h1>Canvas is not supported in this browser</h1>\r\n    </canvas>\r\n    </>\r\n  );\r\n};\r\nexport { Screen };\r\nconst Button = styled.button`\r\nposition:absolute;\r\ntop:40%;\r\nz-index: 3;\r\nleft:500px;`","import React, { useState, useEffect } from \"react\";\n//import logo from './logo.svg';\n//import { Counter } from './features/counter/Counter';\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport { Screen } from \"./components/Screen.js\";\n//import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst App = function (props) {\n  return (\n    <>\n      <Screen />\n    </>\n  );\n};\n\nexport default App;\n","\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\n \nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// import Box from \"./Box.js\";\n// const screen = document.getElementById('screen');\n// const screenCtx = screen.getContext('2d');\n\n// const box = new Box(\"box1\",20,30,\"rgb(123,100,200)\",100,70,0,\"rgb(123,100,200)\");\n// box.paint(screenCtx,screen)\n\n// // const box2 = new Box(\"box1\",60,100,\"rgb(123,100,200)\",80,70,20,\"rgb(123,100,200)\");\n// // box2.paint(screenCtx)\n\n\n\n// var radius = 0\n\n\n// const button = document.getElementById('but');\n\n// button.onclick = ()=>{\n// //box.clearBoxArea(screenCtx)\n// //box.setRadius(radius++);\n\n// box.setPosition([box.x+10,box.y+20]);\n// screenCtx.clearRect(0,0,screen.width,screen.height);\n// box.paint(screenCtx)\n// }\n// setTimeout(()=>{screenCtx.clearRect(0,0,screen.width,screen.height)},5000)\n\n\n"],"sourceRoot":""}